"""add_new_tables

Revision ID: 5efaeb747c4c
Revises: a6e0b3103dfe
Create Date: 2024-12-11 00:54:54.119358

"""
from alembic import op
import sqlalchemy as sa

from project.core.config import settings


# revision identifiers, used by Alembic.
revision = '5efaeb747c4c'
down_revision = 'a6e0b3103dfe'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('routes',
    sa.Column('route_number', sa.Integer(), nullable=False),
    sa.Column('start_stop', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('end_stop', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('stops_count', sa.Integer(), nullable=True),
    sa.Column('interval', sa.Time(), nullable=True),
    sa.Column('ticket_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('first_adv', sa.Time(), nullable=True),
    sa.Column('last_adv', sa.Time(), nullable=True),
    sa.Column('stops_list', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('route_number'),
    schema='my_app_schema'
    )
    op.create_table('stops',
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('stop_name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('address', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('latitude', 'longitude'),
    schema='my_app_schema'
    )
    op.create_table('drivers',
    sa.Column('passport_number', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('full_name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('id_company', sa.Integer(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('routes_served', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('contract_number', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('contract_start', sa.Date(), nullable=True),
    sa.Column('contract_end', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['id_company'], ['my_app_schema.companies.id_company'], ),
    sa.PrimaryKeyConstraint('passport_number'),
    schema='my_app_schema'
    )
    op.create_table('route_stops',
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('route_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['latitude', 'longitude'], ['my_app_schema.stops.latitude', 'my_app_schema.stops.longitude'], ),
    sa.ForeignKeyConstraint(['route_number'], ['my_app_schema.routes.route_number'], ),
    sa.PrimaryKeyConstraint('latitude', 'longitude', 'route_number'),
    schema='my_app_schema'
    )
    op.create_table('stop_time',
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('route_number', sa.Integer(), nullable=False),
    sa.Column('arrival_time', sa.Time(), nullable=True),
    sa.Column('departure_time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['latitude', 'longitude'], ['my_app_schema.stops.latitude', 'my_app_schema.stops.longitude'], ),
    sa.ForeignKeyConstraint(['route_number'], ['my_app_schema.routes.route_number'], ),
    sa.PrimaryKeyConstraint('latitude', 'longitude', 'route_number'),
    schema='my_app_schema'
    )
    op.create_table('buses',
    sa.Column('gos_num', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('brand', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('model', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('manufacture_year', sa.Integer(), nullable=True),
    sa.Column('owner_company', sa.Integer(), nullable=True),
    sa.Column('route_number', sa.Integer(), nullable=True),
    sa.Column('technical_condition', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('driver_passport', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['driver_passport'], ['my_app_schema.drivers.passport_number'], ),
    sa.ForeignKeyConstraint(['owner_company'], ['my_app_schema.companies.id_company'], ),
    sa.ForeignKeyConstraint(['route_number'], ['my_app_schema.routes.route_number'], ),
    sa.PrimaryKeyConstraint('gos_num'),
    schema='my_app_schema'
    )
    op.create_table('repair_requests',
    sa.Column('request_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('gos_num', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('repair_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('repair_duration', sa.Interval(), nullable=True),
    sa.ForeignKeyConstraint(['gos_num'], ['my_app_schema.buses.gos_num'], ),
    sa.PrimaryKeyConstraint('request_id'),
    schema='my_app_schema'
    )
    op.create_table('technical_inspections',
    sa.Column('inspection_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('mechanic_passport', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('gos_num', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('conclusion', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.ForeignKeyConstraint(['gos_num'], ['my_app_schema.buses.gos_num'], ),
    sa.ForeignKeyConstraint(['mechanic_passport'], ['my_app_schema.mechanics.passport_number'], ),
    sa.PrimaryKeyConstraint('inspection_id'),
    schema='my_app_schema'
    )
    op.create_table('trips',
    sa.Column('trip_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('driver_passport', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('route_number', sa.Integer(), nullable=True),
    sa.Column('gos_num', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('trip_date', sa.Date(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['driver_passport'], ['my_app_schema.drivers.passport_number'], ),
    sa.ForeignKeyConstraint(['gos_num'], ['my_app_schema.buses.gos_num'], ),
    sa.ForeignKeyConstraint(['route_number'], ['my_app_schema.routes.route_number'], ),
    sa.PrimaryKeyConstraint('trip_id'),
    schema='my_app_schema'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trips', schema='my_app_schema')
    op.drop_table('technical_inspections', schema='my_app_schema')
    op.drop_table('repair_requests', schema='my_app_schema')
    op.drop_table('buses', schema='my_app_schema')
    op.drop_table('stop_time', schema='my_app_schema')
    op.drop_table('route_stops', schema='my_app_schema')
    op.drop_table('drivers', schema='my_app_schema')
    op.drop_table('stops', schema='my_app_schema')
    op.drop_table('routes', schema='my_app_schema')
    # ### end Alembic commands ###
